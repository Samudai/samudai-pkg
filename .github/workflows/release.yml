name: Create Release Tag

on:
  push:
    branches:
      - master

jobs:
  tag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get latest tag
        id: get_latest_tag
        run: |
          git fetch --tags
          latest_tag=$(git tag --sort=-v:refname | head -n 1)
          if [ -z "$latest_tag" ]; then
            echo "LATEST_TAG=v0.0.0" >> $GITHUB_ENV
          else
            echo "LATEST_TAG=$latest_tag" >> $GITHUB_ENV
          fi

      - name: Generate new tag
        id: generate_new_tag
        run: |
          latest_tag=${{ env.LATEST_TAG }}
          major=$(echo $latest_tag | cut -d. -f1 | tr -d 'v')
          minor=$(echo $latest_tag | cut -d. -f2)
          patch=$(echo $latest_tag | cut -d. -f3)

          # Check commit message for version bump type
          commit_msg=$(git log -1 --pretty=%B)
          if [[ $commit_msg == *"#major"* ]]; then
            new_major=$((major + 1))
            new_tag="v$new_major.0.0"
          elif [[ $commit_msg == *"#minor"* ]]; then
            new_minor=$((minor + 1))
            new_tag="v$major.$new_minor.0"
          else
            new_patch=$((patch + 1))
            new_tag="v$major.$minor.$new_patch"
          fi
          echo "NEW_TAG=$new_tag" >> $GITHUB_ENV

      - name: Create and push tag
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git tag -a ${{ env.NEW_TAG }} -m "Release ${{ env.NEW_TAG }}"
          git push origin ${{ env.NEW_TAG }}

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.NEW_TAG }}
          name: Release ${{ env.NEW_TAG }}
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
